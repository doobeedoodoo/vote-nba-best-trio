import React from 'react';
import { API, graphqlOperation } from 'aws-amplify'

//Import queries. Take note that these are generated by Amplify for us.
import { listCandidates as ListCandidates } from './graphql/queries'
import { updateCandidate as UpdateCandidate } from './graphql/mutations'

class App extends React.Component {

  state = {
    candidates: []
  }

  async componentDidMount() {
    try {
      const candidateData = await API.graphql(graphqlOperation(ListCandidates))
      this.setState({
        candidates: candidateData.data.listCandidates.items
      })
    } catch (err) {
      console.error('Error fetching data.', err)
    }
  }

  //Handle vote clicks.
  async handleClick(id, event) {

    //Look up item in our current state using the item's ID.
    var index = this.state.candidates.findIndex(x => x.id === id)
    //Retrieve vote count.
    var currentVotes = this.state.candidates[index].votes
    //Increment.
    this.state.candidates[index].votes = currentVotes + 1

    //Set the new state.
    this.setState({
      candidates: this.state.candidates
    })

    //Update the database.
    try {
      await API.graphql(graphqlOperation(UpdateCandidate, { input: { id: id, votes: this.state.candidates[index].votes } }))
    } catch (err) {
      console.log('error creating talk...', err)
    }
  }

  render() {
    return (
      <>
        {
          this.state.candidates.map((c, index) => (
            <div key={index}>
              <h3>{c.name}</h3>
              <button onClick={(e) => this.handleClick(c.id, e)}>VOTE</button>
              <h5>{c.description}</h5>
              <p>{c.votes}</p>
            </div>
          ))
        }
      </>
    )
  }
}

export default App